type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  User: User!
  tags: [Tag!]!
  createdAt: String!
  updatedAt: String!
}

type Tag {
  id: ID!
  name: String!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
}

input CreatePostInput {
  title: String!
  body: String!
}

enum OrderByType {
  ASC
  DESC
}

type Query {
  users(limit: Int, offset: Int, order: OrderByType): [User!]!
  posts: [Post!]!
  tags: [Tag!]!
  getPostById(id: Int!): Post!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  createPost(UserId: Int!, data: CreatePostInput!): Post!   
}
